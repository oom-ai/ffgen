#compdef fake-feature

autoload -U is-at-least

_fake-feature() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'-V[Print version information]' \
'--version[Print version information]' \
":: :_fake-feature_commands" \
"*::: :->fake-feature" \
&& ret=0
    case $state in
    (fake-feature)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:fake-feature-command-$line[1]:"
        case $line[1] in
            (generate)
_arguments "${_arguments_options[@]}" \
'--seed=[]:SEED: ' \
'-h[Print help information]' \
'--help[Print help information]' \
":: :_fake-feature__generate_commands" \
"*::: :->generate" \
&& ret=0

    case $state in
    (generate)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:fake-feature-generate-command-$line[1]:"
        case $line[1] in
            (group)
_arguments "${_arguments_options[@]}" \
'-I+[ID range]:ID_RANGE: ' \
'--id-range=[ID range]:ID_RANGE: ' \
'--seed=[]:SEED: ' \
'--version[Print version information]' \
'-h[Print help information]' \
'--help[Print help information]' \
'::group -- Target group:(fraud_detection_account fraud_detection_transaction_stats)' \
&& ret=0
;;
(label)
_arguments "${_arguments_options[@]}" \
'-I+[]:ID_RANGE: ' \
'--id-range=[]:ID_RANGE: ' \
'-T+[]:TIME_RANGE: ' \
'--time-range=[]:TIME_RANGE: ' \
'-l+[]:LIMIT: ' \
'--limit=[]:LIMIT: ' \
'--seed=[]:SEED: ' \
'--version[Print version information]' \
'-h[Print help information]' \
'--help[Print help information]' \
'::label -- Target label name:(fraud_detection_label)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'--seed=[]:SEED: ' \
'--version[Print version information]' \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
        esac
    ;;
esac
;;
(completion)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':shell -- Target shell name:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_fake-feature_commands] )) ||
_fake-feature_commands() {
    local commands; commands=(
'generate:Generate fake data' \
'completion:Generate shell completion file' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'fake-feature commands' commands "$@"
}
(( $+functions[_fake-feature__completion_commands] )) ||
_fake-feature__completion_commands() {
    local commands; commands=()
    _describe -t commands 'fake-feature completion commands' commands "$@"
}
(( $+functions[_fake-feature__generate_commands] )) ||
_fake-feature__generate_commands() {
    local commands; commands=(
'group:Feature group data' \
'label:Feature label data' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'fake-feature generate commands' commands "$@"
}
(( $+functions[_fake-feature__generate__group_commands] )) ||
_fake-feature__generate__group_commands() {
    local commands; commands=()
    _describe -t commands 'fake-feature generate group commands' commands "$@"
}
(( $+functions[_fake-feature__generate__help_commands] )) ||
_fake-feature__generate__help_commands() {
    local commands; commands=()
    _describe -t commands 'fake-feature generate help commands' commands "$@"
}
(( $+functions[_fake-feature__help_commands] )) ||
_fake-feature__help_commands() {
    local commands; commands=()
    _describe -t commands 'fake-feature help commands' commands "$@"
}
(( $+functions[_fake-feature__generate__label_commands] )) ||
_fake-feature__generate__label_commands() {
    local commands; commands=()
    _describe -t commands 'fake-feature generate label commands' commands "$@"
}

_fake-feature "$@"