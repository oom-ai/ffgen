#compdef ffgen

autoload -U is-at-least

_ffgen() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
'-V[Print version information]' \
'--version[Print version information]' \
":: :_ffgen_commands" \
"*::: :->ffgen" \
&& ret=0
    case $state in
    (ffgen)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:ffgen-command-$line[1]:"
        case $line[1] in
            (group)
_arguments "${_arguments_options[@]}" \
'-I+[ID range]:ID_RANGE: ' \
'--id-range=[ID range]:ID_RANGE: ' \
'--seed=[Seed for random generator]:SEED: ' \
'-h[Print help information]' \
'--help[Print help information]' \
'::group -- Target group name:(fraud_detection_account fraud_detection_transaction_stats)' \
&& ret=0
;;
(label)
_arguments "${_arguments_options[@]}" \
'-I+[Label id range]:ID_RANGE: ' \
'--id-range=[Label id range]:ID_RANGE: ' \
'-T+[Label time range]:TIME_RANGE: ' \
'--time-range=[Label time range]:TIME_RANGE: ' \
'-l+[Max entries to generate]:LIMIT: ' \
'--limit=[Max entries to generate]:LIMIT: ' \
'--seed=[Seed for random generator]:SEED: ' \
'-h[Print help information]' \
'--help[Print help information]' \
'::label -- Target label name:(fraud_detection_label)' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':category -- Schema category:(group label)' \
&& ret=0
;;
(completion)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
':shell -- Target shell name:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" \
'-h[Print help information]' \
'--help[Print help information]' \
&& ret=0
;;
        esac
    ;;
esac
}

(( $+functions[_ffgen_commands] )) ||
_ffgen_commands() {
    local commands; commands=(
'group:Generate feature group data' \
'label:Generate feature label data' \
'list:List available schema' \
'completion:Generate shell completion file' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'ffgen commands' commands "$@"
}
(( $+functions[_ffgen__completion_commands] )) ||
_ffgen__completion_commands() {
    local commands; commands=()
    _describe -t commands 'ffgen completion commands' commands "$@"
}
(( $+functions[_ffgen__group_commands] )) ||
_ffgen__group_commands() {
    local commands; commands=()
    _describe -t commands 'ffgen group commands' commands "$@"
}
(( $+functions[_ffgen__help_commands] )) ||
_ffgen__help_commands() {
    local commands; commands=()
    _describe -t commands 'ffgen help commands' commands "$@"
}
(( $+functions[_ffgen__label_commands] )) ||
_ffgen__label_commands() {
    local commands; commands=()
    _describe -t commands 'ffgen label commands' commands "$@"
}
(( $+functions[_ffgen__list_commands] )) ||
_ffgen__list_commands() {
    local commands; commands=()
    _describe -t commands 'ffgen list commands' commands "$@"
}

_ffgen "$@"